{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","components/Fish.js","sample-fishes.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","user","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","uid","setState","console","log","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","Fish","handleClick","addToOrder","details","src","alt","disabled","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","removeBinding","setItem","stringify","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.7eab8068.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\r\nimport { getFunName } from \"../helpers\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass StorePicker extends React.Component {\r\n    static propTypes = {\r\n        history: PropTypes.object\r\n    };\r\n\r\n    myInput = React.createRef();\r\n\r\n    goToStore = (event) => {\r\n        event.preventDefault();//prevents page from reloading\r\n        const storeName = this.myInput.current.value;\r\n        this.props.history.push(`/store/${storeName}`);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n                { /* stuff */}\r\n                <h2>Please Enter a Store</h2>\r\n                <input type=\"text\" ref={this.myInput} required placeholder=\"Store Name\" defaultValue={getFunName()}></input>\r\n                <button type=\"submit\">Visit Store</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StorePicker;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = (props) => (\r\n    <header className=\"top\">\r\n        <h1>Catch \r\n            <span className=\"ofThe\">\r\n                <span className=\"of\">of</span>\r\n                <span className=\"the\">the</span>\r\n            </span>\r\n        Day</h1>\r\n        <h3 className=\"tagline\">\r\n            <span>{props.tagline}</span>\r\n        </h3>\r\n    </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n    tagline: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { formatPrice } from '../helpers';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Order extends React.Component {\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        order: PropTypes.object,\r\n        removeFromOrder: PropTypes.func\r\n    };\r\n    renderOrder = (key) => {\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.order[key];\r\n        const isAvailable = fish && fish.status === 'available';\r\n        const transitionOptions = {\r\n            classNames: \"order\",\r\n            key,\r\n            timeout: {enter: 500, exit: 500 }\r\n        };\r\n        //make sure the fish is loaded before we continue\r\n        if(!fish) return null;\r\n        \r\n        if(!isAvailable) {\r\n            return (\r\n            <CSSTransition {...transitionOptions}>\r\n                <li key={key}>Sorry, {fish ? fish.name : 'fish'} is no longer available.</li>\r\n            </CSSTransition>\r\n        )}\r\n        return (\r\n        <CSSTransition {...transitionOptions}>\r\n            <li key={key}><span>\r\n                <TransitionGroup component=\"span\" className=\"count\">\r\n                    <CSSTransition {...transitionOptions}>\r\n                        <span>{count}</span> \r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                lbs {fish.name}\r\n                {formatPrice(count * fish.price)}\r\n                <button onClick={() => this.props.removeFromOrder(key)}>&times;</button></span>\r\n            </li>\r\n        </CSSTransition>\r\n        )}\r\n    render () {\r\n        const orderIds = Object.keys(this.props.order);\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n            const fish = this.props.fishes[key];\r\n            const count = this.props.order[key];\r\n            const isAvailable = fish && fish.status === 'available';\r\n            if(isAvailable) {\r\n                return prevTotal + (count * fish.price);\r\n            }\r\n            return prevTotal;\r\n        }, 0);\r\n\r\n        return (\r\n            <div className=\"order-wrap\">\r\n                <h2>Order</h2>\r\n                <TransitionGroup component=\"ul\" className=\"order\">\r\n                    {orderIds.map(this.renderOrder)}\r\n                </TransitionGroup>\r\n                <div className=\"total\">\r\n                    Total: \r\n                    <strong>{formatPrice(total)}</strong>\r\n                </div>\r\n            </div>  \r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Order;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component {\r\n    nameRef = React.createRef();\r\n    priceRef = React.createRef();\r\n    statusRef = React.createRef();\r\n    descRef = React.createRef();\r\n    imageRef = React.createRef();\r\n\r\n    static propTypes = {\r\n      addFish: PropTypes.func\r\n    };\r\n\r\n    createFish = (event) => {\r\n        event.preventDefault();\r\n        const fish = {\r\n        name: this.nameRef.current.value,\r\n        price: parseFloat(this.priceRef.current.value), //for numbers\r\n        status: this.statusRef.current.value,\r\n        desc: this.descRef.current.value,\r\n        image: this.imageRef.current.value\r\n        }    \r\n        this.props.addFish(fish);\r\n        event.currentTarget.reset();\r\n    };\r\n\r\n    render () {\r\n        return (\r\n          <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n              <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\"/>\r\n              <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\"/>\r\n              <select name=\"status\" ref={this.statusRef}>\r\n                <option value=\"available\">Fresh</option>\r\n                <option value=\"unavailable\">Sold Out</option>\r\n              </select>\r\n              <textarea name=\"desc\" ref={this.descRef} placeholder=\"Description\"/>\r\n              <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\"/>\r\n              <button type=\"submit\">Add Fish</button>\r\n          </form>  \r\n        );\r\n    }\r\n}\r\n\r\nexport default AddFishForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EditFishForm extends React.Component {\r\n    static propTypes = {\r\n        fish: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        index: PropTypes.string,\r\n        updateFish: PropTypes.func\r\n    }\r\n    handleChange = event => {\r\n        //update that fish\r\n        //1. take copy of current fish\r\n        const updatedFish = {\r\n            ...this.props.fish,\r\n            [event.currentTarget.name]: event.currentTarget.value\r\n        };\r\n        this.props.updateFish(this.props.index, updatedFish)\r\n    }\r\n    render () {\r\n        return <div className=\"fish-edit\">\r\n            <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name} />\r\n            <input type=\"text\" name=\"price\" onChange={this.handleChange} value={this.props.fish.price} />\r\n            <select type=\"text\" name=\"status\" onChange={this.handleChange} value={this.props.fish.status}>\r\n                <option value=\"available\">Fresh</option>\r\n                <option value=\"unavailable\">Sold Out</option>\r\n            </select>\r\n            <textarea name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc} />\r\n            <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image} />\r\n            <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default EditFishForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = (props) => (\r\n    <nav className=\"login\">\r\n        <h2>Inventory Login</h2>\r\n        <p>Sign in to manage your store's inventory.</p>\r\n        <button className=\"github\" onClick={() => props.authenticate('Github')}>Log In with Github</button>\r\n    </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Login;","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyBxAuv_Rka8sGl4HIezXkV4vwn4tUvsq90\",\r\n    authDomain: \"catch-of-the-day---jessica-c.firebaseapp.com\",\r\n    databaseURL: \"https://catch-of-the-day---jessica-c-default-rtdb.firebaseio.com\"\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n// This is a named export\r\nexport { firebaseApp };\r\n\r\n// This is a default export\r\nexport default base;\r\n","import React from 'react';\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm';\r\nimport PropTypes from 'prop-types';\r\nimport Login from './Login';\r\nimport base, { firebaseApp } from \"../base\";\r\nimport firebase from 'firebase';\r\n\r\nclass Inventory extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    updateFish: PropTypes.func,\r\n    deleteFish: PropTypes.func,\r\n    loadSampleFishes:PropTypes.func\r\n  };\r\n\r\n  state = {\r\n    user: null,\r\n    owner: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if(user) {\r\n        this.authHandler({ user });\r\n      };\r\n    });\r\n  };\r\n  authHandler = async (authData) => {\r\n    // 1. Look up the current store in the firebase database\r\n    const store = await base.fetch(this.props.storeId, { context: this });\r\n    // 2. Claim it if there is no owner\r\n    if (!store.owner) {\r\n      // save it as our own\r\n      await base.post(`${this.props.storeId}/owner`, {\r\n        data: authData.user.uid\r\n      })\r\n    }\r\n    // 3. Set the state of the inventory component to reflect the current user\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner || authData.user.uid\r\n    })\r\n    console.log(authData);\r\n  }\r\n\r\n  authenticate = (provider) => {\r\n    const authProvider = new firebase.auth.[`${provider}AuthProvider`]();\r\n    firebaseApp\r\n      .auth()\r\n      .signInWithPopup(authProvider)\r\n      .then(this.authHandler);\r\n  };\r\n\r\n  logout = async () => {\r\n    console.log('logging out');\r\n    await firebase.auth().signOut();\r\n    this.setState({ uid: null });\r\n  };\r\n\r\n  render () {\r\n    //Logout button\r\n    const logout = <button onClick={this.logout}>Log Out</button>\r\n    // 1. Check if they are logged in\r\n    if (!this.state.uid) {\r\n      return <Login authenticate={this.authenticate} />;\r\n    }\r\n    // 2. Check if they are not the owner of the store\r\n    if (this.state.uid !== this.state.owner) {\r\n      return <div><p>sorry your'e not the owner</p>{logout}</div>\r\n    }\r\n    // 3. They must be the owner, just render the inventory\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {logout}\r\n        {Object.keys(this.props.fishes).map(key => (\r\n          <EditFishForm key={key} index={key} fish={this.props.fishes[key]} updateFish={this.props.updateFish} deleteFish={this.props.deleteFish}/>\r\n        ))}\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\r\n      </div>  \r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;","import React from 'react';\r\nimport { formatPrice } from '../helpers';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Fish extends React.Component {\r\n    handleClick = () => {\r\n        this.props.addToOrder(this.props.index);\r\n    };\r\n    static propTypes = {\r\n        details: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        addToOrder: PropTypes.func\r\n    };\r\n    render () {\r\n        const { image, name, price, desc, status } = this.props.details;\r\n        const isAvailable = status === 'available';\r\n        return (\r\n            <li className=\"menu-fish\">\r\n                <img src={image} alt={name} />\r\n                <h3 className=\"fish-name\">\r\n                    {name}\r\n                    <span className=\"price\">{formatPrice(price)}</span>\r\n                </h3>\r\n                <p>{desc}</p>\r\n                <button disabled={!isAvailable} onClick={this.handleClick}>{isAvailable ? 'Add to Order' : 'Sold Out'}</button>\r\n            </li>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Fish;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Header from \"./Header\";\r\nimport Order from \"./Order\";\r\nimport Inventory from \"./Inventory\";\r\nimport Fish from \"./Fish\";\r\nimport sampleFishes from \"../sample-fishes\"\r\nimport base from \"../base\"\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        fishes: {},\r\n        order: {}\r\n    }\r\n\r\n    static propTypes = {\r\n        match: PropTypes.object,\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { params } = this.props.match;\r\n        //first resintate local storage\r\n        const localStorageRef = localStorage.getItem(params.storeId);\r\n        if(localStorageRef) {\r\n            this.setState({ order: JSON.parse(localStorageRef)});\r\n        }\r\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n            context: this,\r\n            state: 'fishes'\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        base.removeBinding(this.ref);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(this.state.order);\r\n        localStorage.setItem(\r\n            this.props.match.params.storeId,\r\n            JSON.stringify(this.state.order)\r\n        );\r\n    }\r\n\r\n    addFish = (fish) => {\r\n        // 1. Take a copy of existing state\r\n        const fishes = {...this.state.fishes};\r\n        // 2. Add our new fish to that fishes state\r\n        fishes[`fish${Date.now()}`] = fish;\r\n        // 3. Set the new fishes object to state\r\n        this.setState({ fishes });\r\n    };\r\n\r\n    updateFish = (key, updatedFish) => {\r\n        //1. Take copy of current state\r\n        const fishes = {...this.state.fishes};\r\n        //2. update that state\r\n        fishes[key] = updatedFish;\r\n        //3. set that to state\r\n        this.setState({ fishes});\r\n    };\r\n\r\n    deleteFish = (key) => {\r\n        //1. take a copy\r\n        const fishes = {...this.state.fishes};\r\n        //2. update state\r\n        fishes[key] = null;\r\n        //3. update state\r\n        this.setState({fishes}); \r\n    };\r\n\r\n    // deleteFromOrder = (key) => {\r\n    //     const fishes = {...this.state.fishes};\r\n    //     fishes[key] = null;\r\n    //     this.setState({fishes});\r\n    // }\r\n\r\n    loadSampleFishes = () => {\r\n        this.setState({fishes: sampleFishes });\r\n    };\r\n\r\n    addToOrder = (key) => {\r\n    // 1. take a copy of state\r\n    const order = {...this.state.order};\r\n    // 2. either add to the order, or update the number in our order\r\n    order[key] = order[key] + 1 || 1;\r\n    // 3. Call setState to update our state object\r\n    this.setState({ order });\r\n    }\r\n\r\n    removeFromOrder = (key) => {\r\n        const order = {...this.state.order};\r\n        delete order[key];\r\n        this.setState({ order });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"catch-of-the-day\">\r\n                <div className=\"menu\">\r\n                    <Header tagline=\"Fresh Seafood Market\"/>\r\n                    <ul className=\"fishes\">\r\n                        {Object.keys(this.state.fishes).map(key => (\r\n                            <Fish \r\n                                key={key}\r\n                                index={key}\r\n                                details={this.state.fishes[key]}\r\n                                addToOrder={this.addToOrder} \r\n                            />\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <Order \r\n                    fishes={this.state.fishes}\r\n                    order={this.state.order}\r\n                    removeFromOrder={this.removeFromOrder}\r\n                />\r\n                <Inventory \r\n                    addFish={this.addFish}  \r\n                    updateFish={this.updateFish}  \r\n                    deleteFish={this.deleteFish}  \r\n                    loadSampleFishes={this.loadSampleFishes}\r\n                    fishes={this.state.fishes}\r\n                    storeId={this.props.match.params.storeId}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nconst NotFound = () => ( \r\n    <div>\r\n        <h2>Not Found</h2>\r\n    </div>\r\n);\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\nconst Router = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={StorePicker}/>\r\n            <Route path=\"/store/:storeId\" component={App}/>\r\n            <Route component={NotFound}/>\r\n        </Switch>\r\n    </BrowserRouter>\r\n)\r\n\r\nexport default Router;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Router from './components/Router';\r\nimport './css/style.css';\r\n\r\nrender(<Router/>, document.querySelector('#main'));"],"sourceRoot":""}